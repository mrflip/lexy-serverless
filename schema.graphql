## --------------------------------------------------
##
##  Strong Scalar Types

scalar DateTime
scalar JSON
scalar JSONObject

enum LengthUnit { METER, MILLIMETER, INCH, FOOT }
enum WeightUnit { KILOGRAM, GRAM, OUNCEWT, POUNDWT }
enum VolumeUnit { LITER, MILLILITER, OUNCEVOL, GALLON }

type Mutation {
  bee_put(
    letters:            String!
    datestr:            String
    guesses:            [String]
    nogos:              [String]
    nytScore:           Int
    nytMax:             Int
  ): BeeMuResp!

  bee_del(
    letters:            String!,
  ): BeeMuResp!

  guess_put(
    bee_id:             String!,
    word:               String!,
  ): GuessMuResp!

  guess_del(
    bee_id:             String!,
    word:               String!,
  ): GuessMuResp!
}

type Query {
  bee_get(
    letters:            String!
  ): BeeGetResp!

  bee_list(
    limit:              Int
    cursor:             String
    sortby:             String
    sortRev:            Boolean
  ): BeeListPage!

  guess_list(
    bee_id:             String!
    limit:              Int
    cursor:             String
  ): GuessListResp!
}

type BeeGetResp {
  success:              Boolean!
  message:              String
  bee:                  Bee
}

type BeeMuResp {
  success:              Boolean!
  message:              String
  bee:                  Bee
}

type GuessMuResp {
  success:              Boolean!
  message:              String
  guess:                Guess
}


type GuessListResp {
  success:              Boolean!
  message:              String
  guesses:              [Guess!]
}

type BeeListPage {
  success:              Boolean!
  message:              String
  bees:                 [Bee!]
  cursor:               String
}

type Bee {
  letters:              String!
  datestr:              String
  updatedAt:            String
  guesses:              [String!]!
  nogos:                [String!]!
  nytScore:             Int
  nytMax:               Int
  nytFrac:              Int
}

type Guess {
  bee_id:               String!
  word:                 String!
  # len:                Int!
  # isPan:              Boolean!
  # valid:              Boolean!
  # scrabble:           Boolean!
  # score:              Int!
}

# directive @aws_subscribe(mutations: [String]) on FIELD_DEFINITION
#
#
# type Subscription {
#   addProduct: Product
#   @aws_subscribe(mutations: 	["productUpdate"])
# }

schema {
  query:              	Query
  mutation:           	Mutation
  # subscription:      	Subscription
}
