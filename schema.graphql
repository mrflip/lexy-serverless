
## --------------------------------------------------
##
##  Strong Scalar Types

scalar Date

enum LengthUnit { METER, MILLIMETER, INCH, FOOT }
enum WeightUnit { KILOGRAM, GRAM, OUNCEWT, POUNDWT }
enum VolumeUnit { LITER, MILLILITER, OUNCEVOL, GALLON }

type Mutation {
  bee_add(
    letters:            String!,
    datestr:            String,
  ): String!
  bee_del(
    letters:            String!,
  ): String!
  guess_add(
    letters:           String!,
    guess:              String!,
    score:              Int!,
    isPangram:          Boolean!,
    score:              Int!,
    scrabble:           Boolean!,
  ): String!
  guess_del(
    guess:              String!,
  ): BeeGuess!
}

type BeeGuess {
    guess:              String!,
    len:                Int!,
    isPangram:          Boolean!,
    score:              Int!,
    scrabble:           Boolean!,
}  

type Query {
  bee_guesses(
    limit:     Int,
    nextToken: BeeGuessTokInp
  ): BeeGuessesList
}

# https://schema.org/Product
input ProductInp {
  id:           	ID!,
  name:         	String!,

}

# https://schema.org/Product
type Product {
  id:           	ID!,
  name:         	String!,
  description:  	String,
  url:          	String,
  image_url:    	String,
  isKindOf:     	ID,
  manufacturer: 	String,
  brand:                String,
  brand_code:           String,
  model_num:            String,
  mpn:          	String,
  category:     	String,
  unspsc:               String,
  nsn:          	String,
  gtin:         	String,
  upc:                  String,
  asin:                 String,
  condition:            String,
  price:                Float,
  #
  # rating_agg:   	Float,  #
  # rating_votes: 	Int,
  # sku:          	String,
  # lot_id:       	String,
  # length:      	Float,
  # width:       	Float,
  # height:      	Float,
  # weight:      	Float,
  # color:        	String
  #
  # offers:     	[Offer]
  # hasMerchantReturnPolicy:
  # isConsumableFor: 	Product
  # isRelatedTo:     	Product
  #
}

type Category {
  name:                 String!,
}

directive @aws_subscribe(mutations: [String]) on FIELD_DEFINITION


type Subscription {
  addProduct: Product
  @aws_subscribe(mutations: 	["productUpdate"])
}

# type Merchant {
# }
# 
# type Org {
# }
# 
# type Thing {
# }
#

##
## Places
##

# https://schema.org/Place
type Place {
  id:           	ID!
  name:         	String!
  image_url:    	String
  scope:        	String # site, building, branch_code, floor, room, cabinet, position, etc.
  #
  # address:      	String
  # longitude:    	Float
  # latitude:     	Float
  #
  contained_in: 	Place
}

##
## Inventory
##

# Mapping of products that should be in each space
type ProductCollection {
  id:           	ID!
  name:         	String!  
}

# Totals of stock across all the installed spaces
#
#

##
## Shopping List
##


##
## Merchant
##


##
## Products
##
##


type ProductListToken {
    product_id : String
}
input ProductListTokenInp {
    product_id : String!
}
type ProductListPage {
  products:  [Product!]!
  nextToken: ProductListToken
}

## "Toilet Paper" is a ProductKind; "Charmin Ultra Soft 24 Mega Rolls" is a Product
type ProductKind {
  id:            	ID!
  name:          	String!
  description:   	String
  image_url:     	String
  # http://www.productontology.org/id/Racing_bicycle
}

## IndividualProduct is a specific physical object, e.g. "Macbook with
## serial #234234 and lots of stickers on it and a crack in the corner
## of its screen"
type IndividualProduct {
  id:            	ID!
  name:          	String!
  description:   	String
  serial_number: 	String
}

schema {
  query:              	Query
  mutation:           	Mutation
  subscription:       	Subscription
}
