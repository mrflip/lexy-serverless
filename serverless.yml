# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service:  samwise
app:      samwise
org:      mrflip

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-webpack
  - serverless-dotenv-plugin

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

  environment:
    productsTable:    ${self:custom.productsTable}
    notesTable:       ${self:custom.notesTable}
    usersTable:       ${self:custom.notesTable}
    tweetsTable:      ${self:custom.notesTable}
    # stripeSecretKey: ${env:STRIPE_SECRET_KEY}

custom:
  stage:           ${opt:stage, self:provider.stage}
  productsTable:   products-${self:custom.stage}
  notesTable:      notes-${self:custom.stage}
  usersTable:      users-${self:custom.stage}
  tweetsTable:     tweets-${self:custom.stage}
  attachBucket:    attachments-${self:custom.stage}
  fooBucket:       foobuck-${self:custom.stage}
  #
  serverless-offline:
    port: 4000
  webpack:
    includeModules: true
    excludeFiles:   "*.test.*"
    keepOutputDirectory: true
    config: 'webpack.config.cjs'
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: ${self:custom.usersTable}
            sources: [seed-data/Users.json]
          - table: ${self:custom.tweetsTable}
            sources: [seed-data/Tweets.json]
          - table: ${self:custom.productsTable}
            sources: [seed-data/Products.json]

  # https://www.npmjs.com/package/serverless-domain-manager
  #
  # Need to move to Route53 management of one of our domains, parking
  # this for now
  #
  # customDomain:
  #   domainName: serverless.foo.com
  #   stage: ci
  #   basePath: api
  #   certificateName: '*.foo.com'
  #   createRoute53Record: true
  #   endpointType: 'regional'
  #   securityPolicy: tls_1_2

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  graphql:
    handler:    handler.graphqlHandler
    role:       LambdaDynamoReader
    events:
    - http:
        path:   graphql
        method: post
        cors:   true
    - http:
        path:   graphql
        method: get
        cors:   true
  hello:
    handler:    handler.hello
    role:       LambdaDynamoReader
    events:
    - http:
        path:   hello
        method: get
        cors:   true

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  # API Gateway Errors
  # - ${file(resources/api-gateway-errors.yml)}
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}
  # S3
  - ${file(resources/s3-bucket.yml)}
  # IAM
  - ${file(resources/iam-roles.yml)}


#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
