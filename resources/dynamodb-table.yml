Resources:
  #
  # If you add DynamoDB Tables you must add here and in the role below
  #
  ProductTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: "Products"
      KeySchema:
        -
          AttributeName: id
          KeyType:       HASH
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      # ProvisionedThroughput:
      #   ReadCapacityUnits: 10
      #   WriteCapacityUnits: 10
  UserTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'Users'
      KeySchema:
        -
          AttributeName: handle
          KeyType: HASH
      AttributeDefinitions:
        -
          AttributeName: handle
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      # ProvisionedThroughput:
      #   ReadCapacityUnits: 10
      #   WriteCapacityUnits: 10
  TweetsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'Tweets'
      KeySchema:
        -
          AttributeName: tweet_id
          KeyType: HASH
      AttributeDefinitions:
        -
          AttributeName: tweet_id
          AttributeType: S
        -
          AttributeName: handle
          AttributeType: S
        -
          AttributeName: retweet_count
          AttributeType: N
        -
          AttributeName: created_at
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      # ProvisionedThroughput:
      #   ReadCapacityUnits: 10
      #   WriteCapacityUnits: 10
      GlobalSecondaryIndexes:
        -
          IndexName: top-index
          KeySchema:
            -
              AttributeName: handle
              KeyType: HASH
            -
              AttributeName: retweet_count
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          # ProvisionedThroughput:
          #   ReadCapacityUnits: 10
          #   WriteCapacityUnits: 10
        -
          IndexName: tweet-index
          KeySchema:
            -
              AttributeName: handle
              KeyType: HASH
            -
              AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          # ProvisionedThroughput:
          #   ReadCapacityUnits: 10
          #   WriteCapacityUnits: 10
  NotesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.tableName}
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: noteId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: noteId
          KeyType: RANGE
      # Set the capacity to auto-scale
      BillingMode: PAY_PER_REQUEST

  LambdaDynamoReader:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "LambdaDynamoReader"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: "CloudWatch-Logger-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "*"
        -
          PolicyName: "Dynamo-ServiceRole-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "dynamodb:Query"
                  - "dynamodb:BatchWriteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Scan"
                  - "dynamodb:UpdateItem"
                Resource:
                  - "arn:aws:dynamodb:us-east-1:*:table/Users"
                  - "arn:aws:dynamodb:us-east-1:*:table/Users/*"
                  - "arn:aws:dynamodb:us-east-1:*:table/Tweets"
                  - "arn:aws:dynamodb:us-east-1:*:table/Tweets/*"
                  - "arn:aws:dynamodb:us-east-1:*:table/Products"
                  - "arn:aws:dynamodb:us-east-1:*:table/Products/*"
                  
  XrayLambdaRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "xray-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "xray:PutTraceSegments"
              - "xray:PutTelemetryRecords"
            Resource:
              - "*"
      Roles:
        - Ref: LambdaDynamoReader
