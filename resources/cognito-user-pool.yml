Resources:
  # https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # Generate a name based on the stage
      UserPoolName:             tksm-users-${self:custom.stage}
      UserPoolTags:
        Env:                    ${self:custom.stage}
        App:                    tooksome
      # Set email as an alias
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: False
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name:     verified_email
            Priority: 1
          # - verified_phone_number
      AutoVerifiedAttributes:
        - email
      # MfaConfiguration: OPTIONAL
      # EnabledMfas:
      #   - SMS_MFA
      #   - SOFTWARE_TOKEN_MFA
      Policies:
        PasswordPolicy:
          MinimumLength:        8
          RequireLowercase:     true
          RequireUppercase:     true
          RequireNumbers:       true
          RequireSymbols:       false

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain:                   tksm-users-${self:custom.stage}
      UserPoolId:
        Ref:                    CognitoUserPool
          
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      # Generate an app client name based on the stage
      ClientName:               tksm-users-client-${self:custom.stage}
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false

# Print out the Id of the User Pool that is created
Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPool

  UserPoolDomainId:
    Value:
      Ref: CognitoUserPoolDomain

  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient
